@page "/gwconfig/deviceaop"
@namespace ThingsGateway.Web.Page
@using AlbertCollection.Application.Services.GatewayConfiguration
@attribute [Authorize]
@inject MasaBlazor MasaBlazor
@attribute [RolePermission]
@inherits CultureComponentBase
@inject UserResoures UserResoures
@inject RemoveDataFromOtherCompanyService RemoveDataService
@layout MainLayout


<MCol Md="10" Class="d-flex flex-row mb-4">
    @if (DbContext.DbConfigs != null)
    {
        @foreach (var item in DbContext.DbConfigs)
        {
            if (item.ConfigId != "Default" && item.ConfigId != "AlbertCollection")
            {
                <MCard Class="mx-auto my-12" MaxWidth="300">
                    <ProgressContent>
                        <MProgressLinear Color="deep-purple" Height="10" Indeterminate/>
                    </ProgressContent>

                    <ChildContent>
                        <MCardTitle>@item.ConfigId</MCardTitle>

                        <MCardText>
                            <div style="padding-bottom:8px">
                                <div>@(item.ConnectionString)</div>
                                <div>@(item.DbType)</div>
                                <div>@(item.DbLinkName)</div>
                            </div>
                        </MCardText>
                        <MDivider Class="mx-4"></MDivider>
                        <MCardTitle>迁移数据</MCardTitle>
                        <MCardText>
                            @if (item?.ConfigId != null)
                            {
                                <MButton Color="green" OnClick="()=>StartRemove(item.ConfigId)" Disabled="@_removeFinish">
                                    <MIcon>mdi-clock-start</MIcon>
                                </MButton>
                            }
                        </MCardText>
                    </ChildContent>
                </MCard>
            }
        }
    }
</MCol>

@code{
    private bool _removeFinish = false;

    private async Task StartRemove(string configId)
    {
        _removeFinish = true;

        await RemoveDataService.RemoveData(configId);

        _removeFinish = false;
    }
}

